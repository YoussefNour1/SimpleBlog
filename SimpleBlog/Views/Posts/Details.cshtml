@model SimpleBlog.ViewModels.PostViewModel
@using System.Security.Claims
@{
    ViewData["Title"] = Model.Title ?? "Post Details";
}

<div class="container">
    <div class="main-contant">
        <div class="row">
            <div class="col-sm-12">
                @if (!string.IsNullOrEmpty(Model.PostImagePath))
                {
                    <figure>
                        <img src="@Url.Content(Model.PostImagePath)" class="figure-img img-fluid rounded" alt="@Model.Title" style="max-height: 450px; width: 100%; object-fit: cover;">
                    </figure>
                }
                else
                {
                    <div>
                    <img id="imagePreview" src="#" alt="Image Preview" class="img-fluid rounded shadow-sm" style="max-height: 250px; display: none; margin-bottom: 10px;" />
                    <p class="text-muted" id="noImageText">No current image.</p>
                    </div>
                }

                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h1 class="display-4">@Model.Title</h1>
                    <div class="ms-auto">
                        @if (User.Identity != null && User.Identity.IsAuthenticated && (User.IsInRole("Admin") || Model.IsOwner))
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-secondary btn-sm me-2">Edit</a>
                            <form asp-action="Delete" method="post" style="display:inline;"
                                  onsubmit="return confirm('Are you absolutely sure you want to delete the post titled \'@Model.Title\'? This action cannot be undone.');">
                                <input type="hidden" asp-for="Id" />
                                <button type="submit" class="btn btn-outline-danger btn-sm">Delete</button>
                            </form>
                        }
                    </div>
                </div>
                <a asp-action="Index" class="btn btn-link mb-3 ps-0"><i class="fa fa-arrow-left"></i> Back to List</a>

                <div class="post-meta mb-4 p-3" style="background-color: #f8f9fa; border-radius: 0.25rem;">
                    <dl class="row mb-0">
                        <dt class="col-sm-3 col-lg-2 text-muted">Author:</dt>
                        <dd class="col-sm-9 col-lg-10">
                            <div class="d-flex align-items-center">
                                
                                <img src="@Url.Content(Model.AuthorImage)" alt="@Model.Author"
                                        class="rounded-circle mr-2"
                                        style="width: 35px; height: 35px; object-fit: cover;" />
                               
                                <span class="fw-medium">@Model.Author</span>
                            </div>
                        </dd>

                        <dt class="col-sm-3 col-md-2 text-muted">Published On:</dt>
                        <dd class="col-sm-9 col-md-10">@Model.PublicationDate.ToString("D")</dd>

                        @if (Model.AllAvailableCategories != null && Model.AllAvailableCategories.Any())
                        {
                            <dt class="col-sm-3 col-md-2 text-muted mt-2 mt-sm-0">Categories:</dt>
                            <dd class="col-sm-9 col-md-10 mt-2 mt-sm-0">
                                @foreach (var category in Model.AllAvailableCategories)
                                {
                                    @* TODO: اللينك ده حاليًا بيودي للـ Index، ممكن نخليه يودي لصفحة بتفلتر بالـ Category بعدين *@
                                    <a asp-action="Index" asp-controller="Posts" asp-route-categoryId="@category.Id"
                                       class="badge badge-info mr-1" style="font-size: 0.8rem; text-decoration: none; color: white;">
                                        @category.Name
                                    </a>
                                }
                            </dd>
                        }
                    </dl>
                </div>

                <hr class="mb-4" />

                <div class="post-content lead" style="font-size: 1.1rem; line-height: 1.7; text-align:justify" dir="auto">
                    @Html.Raw(Model.Content)
                </div>

                <hr class="mt-5 mb-4" />
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-12">
                <h3 class="mb-3"><img class="icon-link" src="@Url.Content("/images/comment.png")" width="30px" height="30px"/> Comments (@(Model.Comments?.Count ?? 0))</h3>
                @if (Model.Comments == null || !Model.Comments.Any())
                {
                    <p class="text-muted">No comments yet. Be the first to comment!</p>
                }
                else
                {
                    foreach (var comment in Model.Comments)
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <h6 class="card-subtitle text-primary mb-1">@(comment.User?.UserName ?? comment.User?.Email ?? "Anonymous")</h6>
                                    <small class="text-muted">@comment.PublicationDate.ToLocalTime().ToString("f")</small>
                                </div>
                                <p class="card-text mt-2 mb-0">@Html.Raw(comment.Content?.Replace(Environment.NewLine, "<br />"))</p>
                                    @{
                                        var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                                    }
                                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || comment.UserId == currentUserId))  
                                    {
                                    <div class="mt-2">
                                        <form asp-action="Delete" asp-controller="Comments" method="post" style="display:inline;"
                                              onsubmit="return confirm('Are you sure you want to delete this comment?');">
                                            <input type="hidden" name="Id" value="@comment.Id" />
                                            <button type="submit" class="btn btn-outline-danger btn-sm">Delete</button>
                                        </form>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }

                @if (User.Identity != null && User.Identity.IsAuthenticated)
                {
                    <div class="add-comment-form mt-4 p-3 card shadow-sm">
                        <h5 class="card-title">Add a Comment</h5>
                        <div class="card-body">
                            <form asp-action="Create" asp-controller="Comments" method="post">
                                <input type="hidden" name="PostId" value="@Model.Id" />
                                <div class="form-group mb-3">
                                    <textarea class="form-control" name="Content" rows="4" placeholder="Write your comment here..." required></textarea>
                                </div>
                                <button type="submit" class="btn btn-success">Submit Comment</button>
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <p class="mt-4">Please <a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "Posts", new { Id = Model.Id })">log in</a> to add a comment.</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}